name: Build

on: 
  push:
  workflow_dispatch:

jobs:

  build_window64:
    name: Windows64
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
        .\make_win64.bat
    - name: Prepare
      run: |
        mkdir qjs/pixqjs/Lib/Win64/
        copy build64/Release/v8qjs.lib qjs/pixqjs/Lib/Win64/
        copy library/Win64/quickjs.lib qjs/pixqjs/Lib/Win64/
    - uses: actions/upload-artifact@v2
      with:
        name: pixqjs_bin
        path: qjs/**/*
        
  build_window32:
    name: Windows32
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
        .\make_win32.bat
    - name: Prepare
      run: |
        mkdir qjs/pixqjs/Lib/Win32/
        copy build32/Release/v8qjs.lib qjs/pixqjs/Lib/Win32/
        copy library/Win32/quickjs.lib qjs/pixqjs/Lib/Win32/
    - uses: actions/upload-artifact@v2
      with:
        name: pixqjs_bin
        path: qjs/**/*
        
  build_ios:
    name: iOS
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: Use Xcode 12.0 to use SDK 10.15
      run: sudo xcode-select -switch "/Applications/Xcode_12.app"
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./make_ios.sh
    - name: Prepare
      run: |
        mkdir -p qjs/pixqjs/Lib/iOS/arm64/
        cp build_ios/Release-iphoneos/libv8qjs.a qjs/pixqjs/Lib/arm64/iOS
    - uses: actions/upload-artifact@v2
      with:
        name: pixqjs_bin
        path: qjs/**/*
        
  build_macos:
    name: macOS
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: Use Xcode 12.0 to use SDK 10.15
      run: sudo xcode-select -switch "/Applications/Xcode_12.app"
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./make_osx.sh
    - name: Prepare
      run: |
        mkdir -p qjs/pixqjs/Lib/macOS/
        cp build_osx/libv8qjs.a qjs/pixqjs/Lib/macOS
        cp library/macOS/*.dylib qjs/pixqjs/Lib/macOS/
        mkdir -p qjs/pixqjs/Inc/
        cp -r include/* qjs/pixqjs/Inc/
    - uses: actions/upload-artifact@v2
      with:
        name: pixqjs_bin
        path: qjs/**/*
        
  build_android:
    name: Android
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Install NDK
      run: |
        cd ~
        wget -O NDK -q https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip
        sudo apt install unzip -y
        unzip -q NDK
        export ANDROID_NDK=~/android-ndk-r21b
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        ./make_android.sh
    - name: Prepare
      run: |
        mkdir -p qjs/pixqjs/Lib/Android/arm64-v8a/
        mkdir -p qjs/pixqjs/Lib/Android/armeabi-v7a/
        mkdir -p qjs/pixqjs/Lib/Android/x86/
        cp build.Android.arm64-v8a/libv8qjs.a qjs/pixqjs/Lib/Android/arm64-v8a/
        cp library/Android/arm64-v8a/*.so qjs/pixqjs/Lib/Android/arm64-v8a/
        cp build.Android.armeabi-v7a/libv8qjs.a qjs/pixqjs/Lib/Android/armeabi-v7a/
        cp library/Android/armeabi-v7a/*.so qjs/pixqjs/Lib/Android/armeabi-v7a/
        cp build.Android.x86/libv8qjs.a qjs/pixqjs/Lib/Android/x86/
    - uses: actions/upload-artifact@v2
      with:
        name: pixqjs_bin
        path: qjs/**/*
        

